using Test
using HW5
using Random

@testset "derivative tests" begin
    rng = MersenneTwister(1)
    for i = 1:10
        x = randn(rng, 4)
        u = randn(rng, 2)
        ω = randn(rng, 2)
        Δ = 0.1

        xx = HW5.f(x,u,ω,Δ)
        Jx = HW5.jac_fx(x,u,ω,Δ)
        Ju = HW5.jac_fu(x,u,ω,Δ)
        Jω = HW5.jac_fω(x,u,ω,Δ)
        Jxn = similar(Jx)
        Jun = similar(Ju)
        Jωn = similar(Ju)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxn[:,j] = (HW5.f(x+ej,u,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jun[:,j] = (HW5.f(x,u+ej,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jωn[:,j] = (HW5.f(x,u,ω+ej,Δ)-xx) / 1e-6
        end
        zz = HW5.h(x)
        Jxh = HW5.jac_hx(x)
        Jxhn = similar(Jxh)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxhn[:,j] = (HW5.h(x+ej)-zz) / 1e-6
        end
        @test isapprox(Jx, Jxn; atol=1e-6)
        @test isapprox(Ju, Jun; atol=1e-6)
        @test isapprox(Jω, Jωn; atol=1e-6)
        @test isapprox(Jxh, Jxhn; atol=1e-5)
    end
end

@testset "filter tests" begin
    rng = MersenneTwister(1)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[3.8343693012136555, -0.3352237706037613, 3.8418777676925515, -0.01863235767837068]
    @test Σs[end] ≈[0.2705224199896499 -0.5786595992401714 -0.004252516451965883 -0.23215388482240282; -0.5786595992401778 1.8305834090021063 0.11965417900225417 0.5261238936119599; -0.004252516451967649 0.1196541790022588 0.06571131245765728 -0.01935446176356637; -0.23215388482240276 0.5261238936119538 -0.01935446176356806 0.2192727716704198]
    
    rng = MersenneTwister(2)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[9.38412077704379, 5.4261516508559, 9.301836118633219, 0.8337406562891374]
    @test Σs[end] ≈[0.04662960369529538 0.32035358290408733 0.1005700399331964 0.007442015984633871; 0.3203535829040966 3.1291161649653696 1.3338365580696792 0.11731342037764653; 0.10057003993320332 1.3338365580697085 0.69186883753378 0.06832056629635998; 0.0074420159846346375 0.11731342037765072 0.06832056629636066 0.007322217497253475]
    
    rng = MersenneTwister(3)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[18.15660826835665, -2.536878317652736, 15.432701912861376, -0.05483135699887498]
    @test Σs[end] ≈[0.26547386287997565 0.8498792146942872 -0.01727662673787944 -0.0066120660186065675; 0.8498792146942686 3.1463241486513827 -0.009702703284750314 -0.036221644973809475; -0.017276626737854545 -0.009702703284653884 0.14881697465277688 0.028121411935770512; -0.006612066018600399 -0.03622164497378651 0.028121411935771785 0.006714537641918641]
end


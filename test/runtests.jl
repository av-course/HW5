using Test
using HW5
using Random

@testset "derivative tests" begin
    rng = MersenneTwister(1)
    for i = 1:10
        x = randn(rng, 4)
        u = randn(rng, 2)
        ω = randn(rng, 2)
        Δ = 0.1

        xx = HW5.f(x,u,ω,Δ)
        Jx = HW5.jac_fx(x,u,ω,Δ)
        Ju = HW5.jac_fu(x,u,ω,Δ)
        Jω = HW5.jac_fω(x,u,ω,Δ)
        Jxn = similar(Jx)
        Jun = similar(Ju)
        Jωn = similar(Ju)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxn[:,j] = (HW5.f(x+ej,u,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jun[:,j] = (HW5.f(x,u+ej,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jωn[:,j] = (HW5.f(x,u,ω+ej,Δ)-xx) / 1e-6
        end
        zz = HW5.h(x)
        Jxh = HW5.jac_hx(x)
        Jxhn = similar(Jxh)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxhn[:,j] = (HW5.h(x+ej)-zz) / 1e-6
        end
        @test isapprox(Jx, Jxn; atol=1e-6)
        @test isapprox(Ju, Jun; atol=1e-6)
        @test isapprox(Jω, Jωn; atol=1e-6)
        @test isapprox(Jxh, Jxhn; atol=1e-5)
    end
end

@testset "filter tests" begin
    rng = MersenneTwister(1)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈ [3.5524295830490917, -3.060562975373879, -4.8278675325981535, -4.563520880493337]
    @test Σs[end] ≈ [0.15339325270863277 0.0026406108756881906 0.24315324423660256 0.0021548007999023277; 0.0026406108756878454 0.14225195624076262 0.06674342295504916 0.0024160148886191468; 0.24315324423660206 0.0667434229550497 0.5375044184182654 0.007224289145731834; 0.002154800799902312 0.0024160148886191515 0.0072242891457318156 0.00019572401525080234]
    
    rng = MersenneTwister(2)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[9.795396289656262, 13.153748637840469, 14.345149412479973, 1.1398150710653585]
    @test Σs[end] ≈[0.09974563475954486 0.6079785475581759 0.25878577931925395 -0.0002492579977796871; 0.6079785475581663 4.1267196372784 1.9646299070214093 -0.0005445007450961375; 0.25878577931924307 1.9646299070213662 1.0973831650397805 0.002643660234587784; -0.00024925799777978253 -0.0005445007450968074 0.0026436602345874644 9.054560335001903e-5]
    
    rng = MersenneTwister(3)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[-8.797479455682849, 3.705893289703615, -7.890643423328657, -0.735988818997577]
    @test Σs[end] ≈[0.09598112377313038 0.46110121138617194 -0.03773372756405549 -0.012815266935245519; 0.46110121138617804 2.7721160643166307 -0.5078504299627895 -0.13433607317707047; -0.03773372756405987 -0.5078504299628115 0.2836754801977783 0.059644169917958983; -0.012815266935246442 -0.13433607317707463 0.05964416991795866 0.013071888070638898]
end


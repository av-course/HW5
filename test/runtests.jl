using Test
using HW5
using Random

@testset "derivative tests" begin
    rng = MersenneTwister(1)
    for i = 1:10
        x = randn(rng, 4)
        u = randn(rng, 2)
        ω = randn(rng, 2)
        Δ = 0.1

        xx = HW5.f(x,u,ω,Δ)
        Jx = HW5.jac_fx(x,u,ω,Δ)
        Ju = HW5.jac_fu(x,u,ω,Δ)
        Jω = HW5.jac_fω(x,u,ω,Δ)
        Jxn = similar(Jx)
        Jun = similar(Ju)
        Jωn = similar(Ju)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxn[:,j] = (HW5.f(x+ej,u,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jun[:,j] = (HW5.f(x,u+ej,ω,Δ)-xx) / 1e-6
        end
        for j = 1:2
            ej = zeros(2); ej[j]=1e-6;
            Jωn[:,j] = (HW5.f(x,u,ω+ej,Δ)-xx) / 1e-6
        end
        zz = HW5.h(x)
        Jxh = HW5.jac_hx(x)
        Jxhn = similar(Jxh)
        for j = 1:4
            ej = zeros(4); ej[j]=1e-6;
            Jxhn[:,j] = (HW5.h(x+ej)-zz) / 1e-6
        end
        @test isapprox(Jx, Jxn; atol=1e-6)
        @test isapprox(Ju, Jun; atol=1e-6)
        @test isapprox(Jω, Jωn; atol=1e-6)
        @test isapprox(Jxh, Jxhn; atol=1e-5)
    end
end

@testset "filter tests" begin
    rng = MersenneTwister(1)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈ [-1.6607147751230469, 4.659280050288841, -6.050286006920348, -8.164322866202696]
    @test Σs[end] ≈ [0.01129786704204162 0.03464277655089442 -0.02238838724769552 -0.006263724072789326; 0.03464277655089464 0.404215853231384 -0.2988688551963265 -0.12192370342454717; -0.02238838724769578 -0.2988688551963271 0.2896208818821577 0.10955463992457307; -0.006263724072789432 -0.12192370342454743 0.1095546399245731 0.043844114347617674]
    
    rng = MersenneTwister(2)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[14.560679672482125, 1.27232410494266, 10.90016148760705, -1.1456119954296873]
    @test Σs[end] ≈[0.3704778052556626 -0.36401443002288253 -0.2205116789535449 0.01076449303401121; -0.36401443002289 1.306764555156284 0.36850059730112844 -0.01689397223106132; -0.22051167895354284 0.36850059730111234 0.39641436475584374 0.007140679657737778; 0.01076449303401146 -0.016893972231061927 0.007140679657737414 0.001236801886357487]
    
    rng = MersenneTwister(3)
    (; μs, Σs) = HW5.filter(;rng, num_steps=5, output=false)
    @test μs[end] ≈[-8.900190180500214, 3.1496224066150424, -7.7062918633147905, -0.7009760641294915]
    @test Σs[end] ≈[0.1253063529326374 0.6104418176588994 -0.05046831057422523 -0.019520906980548647; 0.6104418176589089 3.097231619387911 -0.3808156401365175 -0.124392333076308; -0.05046831057423984 -0.38081564013658564 0.22632677750910962 0.05021125891392946; -0.019520906980551655 -0.1243923330763213 0.050211258913928365 0.011829089930117189]
end

